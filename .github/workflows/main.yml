name: python-package

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  pkg-install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pkg-deps-${{ hashFiles('requirements.txt') }}-${{ hashFiles('**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-pkg-deps-${{ hashFiles('requirements.txt') }}-
            ${{ runner.os }}-pkg-deps-
            ${{ runner.os }}-
      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install -e .[tf] --upgrade

  install-pytorch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pkg-deps-${{ hashFiles('requirements-pt.txt') }}-${{ hashFiles('**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-pkg-deps-${{ hashFiles('requirements-pt.txt') }}-
            ${{ runner.os }}-pkg-deps-
            ${{ runner.os }}-
      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install -e .[torch] --upgrade

  pkg-test:
    runs-on: ubuntu-latest
    needs: pkg-install
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pkg-deps-${{ hashFiles('requirements.txt') }}-${{ hashFiles('**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-pkg-deps-${{ hashFiles('requirements.txt') }}-
            ${{ runner.os }}-pkg-deps-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[tf] --upgrade
          pip install coverage>=4.5.4 pytest>=5.3.2

      - name: Run unittests
        run: |
          coverage run -m pytest test/ --ignore test/pytorch
          coverage xml

      - uses: actions/upload-artifact@v2
        with:
          name: coverage-main
          path: ./coverage.xml

  test-pytorch:
    runs-on: ubuntu-latest
    needs: install-pytorch
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pkg-deps-${{ hashFiles('requirements-pt.txt') }}-${{ hashFiles('**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-pkg-deps-${{ hashFiles('requirements-pt.txt') }}-
            ${{ runner.os }}-pkg-deps-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[torch] --upgrade
          pip install coverage>=4.5.4 pytest>=5.3.2

      - name: Run unittests
        run: |
          coverage run -m pytest test/pytorch/ --noconftest
          coverage xml -o coverage-pt.xml

      - uses: actions/upload-artifact@v2
        with:
          name: coverage-pytorch
          path: ./coverage-pt.xml

  codecov-upload:
    runs-on: ubuntu-latest
    needs: [ pkg-test, test-pytorch]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          flags: unittests
          fail_ci_if_error: true

  flake8-py3:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64
      - name: Run flake8
        run: |
          pip install flake8
          flake8 --version
          flake8 ./

  mypy-py3:
    runs-on: ubuntu-latest
    needs: pkg-install
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pkg-deps-${{ hashFiles('requirements.txt') }}-${{ hashFiles('**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-pkg-deps-${{ hashFiles('requirements.txt') }}-
            ${{ runner.os }}-pkg-deps-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[tf] --upgrade
          pip install mypy
      - name: Run mypy
        run: |
          mypy --version
          mypy --config-file mypy.ini doctr/

  docker-ready:
    runs-on: ubuntu-latest
    needs: pkg-install
    steps:
      - uses: actions/checkout@v2
      - name: Build docker image
        run: docker build . -t doctr-py3.8.1-tf2.4-slim
      - name: Run docker container
        run: docker run doctr-py3.8.1-tf2.4-slim python -c 'import doctr'

  docs-build:
    runs-on: ubuntu-latest
    needs: pkg-install
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pkg-deps-${{ hashFiles('requirements.txt') }}-${{ hashFiles('**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-pkg-deps-${{ hashFiles('requirements.txt') }}-
            ${{ runner.os }}-pkg-deps-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[tf] --upgrade
          pip install -r docs/requirements.txt

      - name: Build documentation
        run: cd docs && bash build.sh

  test-scripts:
    runs-on: ubuntu-latest
    needs: pkg-install
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pkg-deps-${{ hashFiles('requirements.txt') }}-${{ hashFiles('**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-pkg-deps-${{ hashFiles('requirements.txt') }}-
            ${{ runner.os }}-pkg-deps-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[tf] --upgrade

      - name: Run analysis script
        run: |
          wget https://github.com/mindee/doctr/releases/download/v0.1.0/sample.pdf
          python scripts/analyze.py sample.pdf --noblock

  api-ready:
    runs-on: ubuntu-latest
    needs: pkg-install
    steps:
      - uses: actions/checkout@v2
      - name: Build & run docker
        run: PORT=8002 docker-compose up -d --build
      - name: Install dependencies in docker
        run: |
          PORT=8002 docker-compose exec -T web python -m pip install --upgrade pip
          PORT=8002 docker-compose exec -T web pip install -r requirements-dev.txt
      - name: Run docker test
        run: PORT=8002 docker-compose exec -T web pytest .
